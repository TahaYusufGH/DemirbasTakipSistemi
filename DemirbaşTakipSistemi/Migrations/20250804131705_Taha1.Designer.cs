// <auto-generated />
using System;
using DemirbaşTakipSistemi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemirbaşTakipSistemi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250804131705_Taha1")]
    partial class Taha1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SicilNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SicilNo");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Ariza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ArizaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("BildirenId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CozenPersonelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cozum")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CozumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemirbasId")
                        .HasColumnType("int");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ArizaTarihi");

                    b.HasIndex("BildirenId");

                    b.HasIndex("CozenPersonelId");

                    b.HasIndex("DemirbasId");

                    b.HasIndex("Durum");

                    b.ToTable("Arizalar");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.ArizaKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DemirbasId")
                        .HasColumnType("int");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DemirbasId");

                    b.HasIndex("UserId");

                    b.ToTable("ArizaKayitlari");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Bakim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BakimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("BakimTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BakimYapanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DemirbasId")
                        .HasColumnType("int");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SonrakiBakimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TamamlanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("YapilanIslemler")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BakimYapanId");

                    b.HasIndex("DemirbasId");

                    b.ToTable("Bakimlar");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Demirbas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AlimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DemirbasKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OdaId")
                        .HasColumnType("int");

                    b.Property<string>("SeriNo")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DemirbasKodu")
                        .IsUnique();

                    b.HasIndex("OdaId");

                    b.HasIndex("SeriNo");

                    b.ToTable("Demirbaslar");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.DepoIslem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BelgeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IslemYapanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OnaylayanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RedNedeni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SarfMalzemeId")
                        .HasColumnType("int");

                    b.Property<string>("TalepEdenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tedarikci")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IslemTarihi");

                    b.HasIndex("IslemYapanId");

                    b.HasIndex("OnaylayanId");

                    b.HasIndex("SarfMalzemeId");

                    b.HasIndex("TalepEdenId");

                    b.ToTable("DepoIslemler");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Oda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kat")
                        .HasColumnType("int");

                    b.Property<string>("OdaKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SorumluPersonelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OdaKodu")
                        .IsUnique();

                    b.HasIndex("SorumluPersonelId");

                    b.ToTable("Odalar");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.SarfMalzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MalzemeKodu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MevcutStok")
                        .HasColumnType("int");

                    b.Property<int>("MinimumStok")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SonGuncelleme")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeKodu")
                        .IsUnique();

                    b.ToTable("SarfMalzemeler");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Zimmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DemirbasId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IadeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAktif")
                        .HasColumnType("bit");

                    b.Property<string>("PersonelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeslimAlanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeslimEdenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ZimmetTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("TeslimAlanId");

                    b.HasIndex("TeslimEdenId");

                    b.HasIndex("DemirbasId", "IsAktif")
                        .HasFilter("[IsAktif] = 1");

                    b.ToTable("Zimmetler");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Ariza", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "Bildiren")
                        .WithMany("Arizalar")
                        .HasForeignKey("BildirenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "CozenPersonel")
                        .WithMany()
                        .HasForeignKey("CozenPersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DemirbaşTakipSistemi.Models.Demirbas", "Demirbas")
                        .WithMany("Arizalar")
                        .HasForeignKey("DemirbasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bildiren");

                    b.Navigation("CozenPersonel");

                    b.Navigation("Demirbas");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.ArizaKaydi", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.Demirbas", "Demirbas")
                        .WithMany("ArizaKayitlari")
                        .HasForeignKey("DemirbasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demirbas");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Bakim", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "BakimYapan")
                        .WithMany()
                        .HasForeignKey("BakimYapanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.Demirbas", "Demirbas")
                        .WithMany("Bakimlar")
                        .HasForeignKey("DemirbasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BakimYapan");

                    b.Navigation("Demirbas");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Demirbas", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.Oda", "Oda")
                        .WithMany("Demirbaslar")
                        .HasForeignKey("OdaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Oda");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.DepoIslem", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "IslemYapan")
                        .WithMany("DepoIslemler")
                        .HasForeignKey("IslemYapanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "Onaylayan")
                        .WithMany()
                        .HasForeignKey("OnaylayanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DemirbaşTakipSistemi.Models.SarfMalzeme", "SarfMalzeme")
                        .WithMany("DepoIslemler")
                        .HasForeignKey("SarfMalzemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "TalepEden")
                        .WithMany()
                        .HasForeignKey("TalepEdenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IslemYapan");

                    b.Navigation("Onaylayan");

                    b.Navigation("SarfMalzeme");

                    b.Navigation("TalepEden");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Oda", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "SorumluPersonel")
                        .WithMany()
                        .HasForeignKey("SorumluPersonelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("SorumluPersonel");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Zimmet", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.Demirbas", "Demirbas")
                        .WithMany("Zimmetler")
                        .HasForeignKey("DemirbasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "Personel")
                        .WithMany("Zimmetler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "TeslimAlan")
                        .WithMany()
                        .HasForeignKey("TeslimAlanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", "TeslimEden")
                        .WithMany()
                        .HasForeignKey("TeslimEdenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Demirbas");

                    b.Navigation("Personel");

                    b.Navigation("TeslimAlan");

                    b.Navigation("TeslimEden");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DemirbaşTakipSistemi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.ApplicationUser", b =>
                {
                    b.Navigation("Arizalar");

                    b.Navigation("DepoIslemler");

                    b.Navigation("Zimmetler");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Demirbas", b =>
                {
                    b.Navigation("ArizaKayitlari");

                    b.Navigation("Arizalar");

                    b.Navigation("Bakimlar");

                    b.Navigation("Zimmetler");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.Oda", b =>
                {
                    b.Navigation("Demirbaslar");
                });

            modelBuilder.Entity("DemirbaşTakipSistemi.Models.SarfMalzeme", b =>
                {
                    b.Navigation("DepoIslemler");
                });
#pragma warning restore 612, 618
        }
    }
}
